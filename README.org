#+title: MSc Robotics

** Table of Contents :TOC_2:
  - [[#lecture-information][Lecture Information]]
  - [[#requirements-and-the-learning-outcomes][Requirements and the Learning Outcomes]]
  - [[#grading-of-the-lecture][Grading of the Lecture]]
  - [[#lecture-sources][Lecture Sources]]
  - [[#content-and-unit-distribution][Content and Unit Distribution]]
  - [[#structure-per-session][Structure per Session]]
  - [[#documentation][Documentation]]
  - [[#related-links][Related Links]]

** Lecture Information

- *WARNING:* This is the content only covered by me as this lecture is shared by
  Prof. Can Dede and Benjamin Massow, M.Sc.
- The goal of this lecture is to give you a better view of how to control robots
  using different programming methods.
- This lecture you will use ROS, a versatile software capable of doing
  pathfinding and localisation, a perfect fit for use in mobile robotics.

| DESCRIPTION        | VALUE                                                           |
| Official Name      | Robotik                                                         |
| Lecture Code       | ROB                                                             |
| Module Code        | MECH-M-2-ROB-ROB-ILV                                            |
| Degree             | M.Sc                                                            |
| Program Name       | Mechatronik Smart Technologies                                  |
| Lecture Name       | Robotics                                                        |
| Semester           | 2                                                               |
| Season             | SS                                                              |
| Room Type          | Lecture Room                                                    |
| Assignments        | Personal Assignment                                             |
| Lecturer(s)        | Daniel T. McGuiness Ph.D, Prof. Can Dede, Benjamin Massow, M.Sc |
| Module Responsible | BnM                                                             |
| Software           | Linux, Python, C++, ROS 2                                       |
| Hardware           | -                                                               |
| SWS Total          | 1                                                               |
| SWS Teaching       | 1                                                               |
| UE Total           | 15                                                              |
| ECTS               | 4                                                               |
| Lecture Type       | ILV                                                             |
| Working Language   | English                                                         |

** Requirements and the Learning Outcomes

- The student should be comfortable with working with either Python
  and/or C++ and should have an beginner level knowledge of the Linux
  environment and the command line interface

| REQUIREMENTS       | TAUGHT LECTURE     | CODE | DEGREE | OUTCOME           |
| C/C++ Programming  | Programming II     | PRO2 | B.Sc   | ROS 2 Programming |
| Python Programming | Software Design    | SWD  | B.Sc   | Linux Experience  |
| Working with IoT   | Internet of Things | IOT  | B.Sc   | Programming       |
| -                  | -                  | -    | -      | -                 |
| -                  | -                  | -    | -      | -                 |

** Grading of the Lecture

- The lecture will have one  personal assignment which will be based on ROS and
  programming applications related to it.
      
| ASSIGNMENT TYPE     | VALUE | QUANTITY |
| Personal Assignment |   100 | 1        |
| SUM                 |   100 |          |

** Lecture Sources

The following are a table of documentation which are useful resources which
goes well with the lecture.

| AUTHOR        | TITLE                                                 | PUBLISHER             |
| M. M. Bassa   | A very informal journey through ROS 2                 | Self-Published        |
| F. M. Rico    | A Concise Introduction to Robot Programming with ROS2 | Taylor Francis (2022) |
| B. Stroustrup | Programming Principles and Practice using C++         | Addison Wesley (2014) |

** Content and Unit Distribution

    
- The content and unit distribution of the lecture is as follows where a unit
  is defined as 45 min lecture.

| ORDER | TOPIC                             | UNITS | SELF STUDY |
|     1 | Mobile Robot Localisation         |     4 |          6 |
|     2 | The GNU/Linux Operating System    |     4 |          6 |
|     3 | ROS 2 Introduction and Concepts   |     4 |          6 |
|     4 | Programming with Client Libraries |     4 |          6 |
|     5 | Simulations and TF Trees          |     4 |          6 |
|     6 | SUM                               |    15 |         30 |

** Structure per Session

- Mobile Robot Localisation
  - Introduction
  - The problems of Noise and Aliasing
    - Sensor Noise
    - Sensor Aliasing
    - Effector Noise
    - An Error Model for Odometric Position Estimation
  - Localisation v. Hard-Coded Navigation
  - Representing Belief
    - Single Hypothesis Belief
    - Multiple Hypothesis Belief
  - Representing Maps
    - Continuous Representation
    - Decomposition Methods
    - Current Challenges
  - Probabilistic Map-Based Localisation
    - Introduction
    - Markov Localisation
      - Application of Probability for Localisation
      - Application: Markov Localisation using a Topological Map
    - Kalman Filter Localisation
    - An Implementation of Kalman Filter
      - A Gentle Introduction to Kalman Filter Theory
      - Kalman Filter Localisation
  - Other Examples of Localisation Methods
    - Landmark-based Navigation
    - Globally Unique Localisation
    - Positioning Beacon systems
    - Route-Based Localisation
  - Building Maps
    - Stochastic Map Technique
    - Other Mapping Techniques
      - Cyclic Environments
      - Dynamic Environments
- Welcome to Linux
  - Learning the Linux Command Line
    - A Short History on Computer Interfaces
    - Linux is a Nutshell
      - A Brief Description of What Linux Does
    - Linux Distributions
  - Installation
  - Docker
    - Dockerfile
    - Running the Container
  - The Structure of Commands
    - Some Rules Regarding the Syntax
  - Helpful Keyboard Shortcuts for the Terminal
  - When you need help with Commands
  - Additional Information
    - Use Tab completion on the Shell
    - The info command
  - A Detailed Look in ls Command
  - Creating and Removing Folders
  - Move, Copy and Delete Files and Folders
    - Find Files using the Command-Line Interface
  - Role to Users and sudo
  - File Permissions
      - Octal Notation
      - Symbolic Notation
  - Hard and Symbolic Links
    - Symbolic Links
      - Hard Links
  - The Linux File System
  - Common Command-Line Tools and Tasks
    - The UNIX Philosophy
    - Connecting Commands with Pipes
    - Viewing Text Files with cat, head, tail, and less
    - Manipulate Text with awk Command
    - Search for test within Files and Streams using grep
      - Additional Information
    - a Brief introduction to Vim (Optional Read)
    - Edition Texts with Nano
    - Working with TAR and Zip Archives
    - Output redirection
    - Exploring the Environment Variables with Path
  - Advanced Topics
    - Find Linux Distribution and Kernel Information
    - Find System Hardware and Disk Information
- ROS Concepts
  - Introduction
  - Publisher and Subscriber Architecture
  - Nodes - The Building Blocks
  - The Discovery Process
  - Communication Between Nodes
    - Description
    - Messages
      - Services
      - Actions
  - Topics
    - Publisher - Subscriber Architecture
    - Anonymity
    - Strongly-Typed
  - Services
    - Service Server
      - Service Client
  - Actions
    - Action Server
    - Action Client
  - Parameters
    - A Detailed Look
      - Declaring Parameters
      - Types of Parameters
      - Parameter Callbacks
    - Parameter Interaction
  - Working with Command Line
  - Launch File
    - ROS DOMAIN ID
      - Choosing a domain ID (short version)
      - Choosing a domain ID (long version)
    - Client Libraries
      - Supported Client Libraries
  - Intermediate Concepts
    - Defining the ROS Domain
      - Participant Constraints
    - ROS 2 Middleware Vendors
  - Configuring Quality of Service
    - Topic Statistics
  - Advanced Concepts
    - The Build System
- Command Line Tools
  - Setting the Environment
  - Turtles and Graphs
  - A Deeper Look into Nodes
  - Working with Topics
  - Working with Services
  - Working with Parameters
  - A Practical Look into Actions
  - Launching Nodes
  - Getting Started with Colcon
  - Creating a Workspace
  - Creating a Package
  - Writing a Simple Publisher & Subscriber
    - Writing the Publisher Node
    - Writing the Subscriber Node
    - Building and Running
  - Writing a Simple Service and Client
    - Writing the Service Node
    - Writing the Client Node
  - Creating Custom msg and srv Files
    - Creating Custom Definitions
    - Testing the Newly Built Interfaces
      - Service Client System
  - Using Parameters in a Class
  - Managing Dependencies
    - Explaining Rosdep
    - Explaining Pacakge Manifesto
  - Creating an Action
  - Writing an Action Server and Client
  - Writing a Launch File
- Transform Library
  - A Gentle Introduction
  - Writing a Static Broadcaster

** Documentation

For any student in need of a LaTeX class designed from the ground-up for
assignment/lab/thesis/slide for MCI needs please have a look at ~mcidoc~ class
hosted at [[https://github.com/dTmC0945/C-MCI-LaTeX-Class-mcidoc][GitHub]].

(-DTMc 2025)
